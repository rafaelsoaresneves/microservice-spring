version: '3.8'

networks:
  localNetwork:
    driver: bridge

services:
  db:
    image: mysql:8.0
    container_name: dockerMySql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cambio_service
      MYSQL_USER: rafa
      MYSQL_PASSWORD: 12345
      #MYSQL_ROOT_HOST: 172.19.0.1
    ports:
      - 3306:3306
    expose:
      # Opens port 3306 on the container
      - 3306
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - localNetwork
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - "./config-server/src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus
    networks:
      - localNetwork
    ports:
      - 9090:9090
    expose:
      - 9090
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - localNetwork
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:2.23.2
    ports:
      - 9411:9411
    networks:
      - localNetwork
  eureka:
    container_name: eureka
    image: eureka-service-discovery:latest
    ports:
      - 8761:8761
    depends_on:
      - db
    networks:
      - localNetwork
  config:
    container_name: config
    image: config-server:latest
    ports:
      - 8888:8888
    depends_on:
      - eureka
    networks:
      - localNetwork
  api-gateway:
    container_name: api-gateway
    restart: always
    image: api-gateway:latest
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - 8765:8765
#    environment:
#      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
    depends_on:
      - eureka
    networks:
      - localNetwork
  cambio-service:
    container_name: cambio-service
    image: cambio-service:latest
    restart: always
    build:
      context: .
      dockerfile: Cambio-Service/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - api-gateway
    networks:
      - localNetwork
  book-service:
    container_name: book-service
    image: book-service:latest
    restart: always
    build:
      context: .
      dockerfile: book-service/Dockerfile
    ports:
      - 8100:8100
#    depends_on:
#     - cambio-service
    networks:
      - localNetwork
  greeting-service:
    container_name: greeting-service
    image: greeting-service:latest
    restart: always
    build:
      context: .
      dockerfile: 04-greeting-service/Dockerfile
    ports:
      - 8080:8080
#    depends_on:
#      - book-service
    networks:
      - localNetwork

volumes:
  my-db:
  prometheus_data: {}
  grafana_data: {}